/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.docs.amf.registration.sb.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the AmfRegistrationAuditLog service. Represents a row in the &quot;amf_registration_audit_log&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.docs.amf.registration.sb.model.impl.AmfRegistrationAuditLogModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.docs.amf.registration.sb.model.impl.AmfRegistrationAuditLogImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AmfRegistrationAuditLog
 * @see com.liferay.docs.amf.registration.sb.model.impl.AmfRegistrationAuditLogImpl
 * @see com.liferay.docs.amf.registration.sb.model.impl.AmfRegistrationAuditLogModelImpl
 * @generated
 */
@ProviderType
public interface AmfRegistrationAuditLogModel extends BaseModel<AmfRegistrationAuditLog> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a amf registration audit log model instance should use the {@link AmfRegistrationAuditLog} interface instead.
	 */

	/**
	 * Returns the primary key of this amf registration audit log.
	 *
	 * @return the primary key of this amf registration audit log
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this amf registration audit log.
	 *
	 * @param primaryKey the primary key of this amf registration audit log
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this amf registration audit log.
	 *
	 * @return the ID of this amf registration audit log
	 */
	public long getId();

	/**
	 * Sets the ID of this amf registration audit log.
	 *
	 * @param id the ID of this amf registration audit log
	 */
	public void setId(long id);

	/**
	 * Returns the action_time of this amf registration audit log.
	 *
	 * @return the action_time of this amf registration audit log
	 */
	public Date getAction_time();

	/**
	 * Sets the action_time of this amf registration audit log.
	 *
	 * @param action_time the action_time of this amf registration audit log
	 */
	public void setAction_time(Date action_time);

	/**
	 * Returns the screen_name of this amf registration audit log.
	 *
	 * @return the screen_name of this amf registration audit log
	 */
	@AutoEscape
	public String getScreen_name();

	/**
	 * Sets the screen_name of this amf registration audit log.
	 *
	 * @param screen_name the screen_name of this amf registration audit log
	 */
	public void setScreen_name(String screen_name);

	/**
	 * Returns the user_id of this amf registration audit log.
	 *
	 * @return the user_id of this amf registration audit log
	 */
	public long getUser_id();

	/**
	 * Sets the user_id of this amf registration audit log.
	 *
	 * @param user_id the user_id of this amf registration audit log
	 */
	public void setUser_id(long user_id);

	/**
	 * Returns the ip_address of this amf registration audit log.
	 *
	 * @return the ip_address of this amf registration audit log
	 */
	@AutoEscape
	public String getIp_address();

	/**
	 * Sets the ip_address of this amf registration audit log.
	 *
	 * @param ip_address the ip_address of this amf registration audit log
	 */
	public void setIp_address(String ip_address);

	/**
	 * Returns the event_type of this amf registration audit log.
	 *
	 * @return the event_type of this amf registration audit log
	 */
	@AutoEscape
	public String getEvent_type();

	/**
	 * Sets the event_type of this amf registration audit log.
	 *
	 * @param event_type the event_type of this amf registration audit log
	 */
	public void setEvent_type(String event_type);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(AmfRegistrationAuditLog amfRegistrationAuditLog);

	@Override
	public int hashCode();

	@Override
	public CacheModel<AmfRegistrationAuditLog> toCacheModel();

	@Override
	public AmfRegistrationAuditLog toEscapedModel();

	@Override
	public AmfRegistrationAuditLog toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}